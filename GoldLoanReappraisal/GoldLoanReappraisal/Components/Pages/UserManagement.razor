@page "/user-management"
@layout EmptyLayout
@attribute [Authorize(Roles = "Admin,Region,Zone")]
@using GoldLoanReappraisal.Components.Layout
@using GoldLoanReappraisal.Data.Models
@using GoldLoanReappraisal.Data.Services
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@rendermode InteractiveServer
@inject IJSRuntime JS
@inject UserManagementService UserManagementService
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager

<PageTitle>User Management</PageTitle>

<div class="user-management-container">
    <div class="content-wrapper text-center">
        <h1>User Management</h1>
        <p class="text-muted">The following users are visible to you based on your role.</p>
        <hr />

        @if (_users == null)
        {
            <p><em>Loading user list...</em></p>
        }
        else if (!_users.Any())
        {
            <div class="alert alert-info">No other users are visible to you.</div>
        }
        else
        {
            <div class="table-container">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>User ID</th>
                            <th>User Type</th>
                            <th>Status</th>
                            <th class="text-end">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in _users)
                        {
                            <tr>
                                <td>@user.USERID</td>
                                <td>@user.USERTYPE</td>
                                <td>@user.USERSTATUS</td>
                                <td class="text-end">
                                    <!-- CHANGED: The onclick event now calls our new navigation method -->
                                    <button name="EditViewButton" class="btn btn-sm btn-outline-primary" @onclick="@(() => NavigateToUserDetails(user.USERID))">Edit / View</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <!-- Pager UI remains the same -->
            <div class="pager-container mt-4">
                @* ... Pager buttons ... *@
            </div>
        }
    </div>
</div>

@code {
    private IEnumerable<VisibleUser>? _users;
    private string? _currentUserId;
    private int _totalUsers = 0;
    private int _currentPage = 1;
    private readonly int _pageSize = 10;
    private int TotalPages => (int)Math.Ceiling(_totalUsers / (double)_pageSize);

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        _currentUserId = authState.User.Identity?.Name;
        if (!string.IsNullOrEmpty(_currentUserId))
        {
            await LoadDataForPage(_currentPage);
        }
        else
        {
            _users = new List<VisibleUser>();
        }
    }

    private async Task LoadDataForPage(int pageNumber)
    {
        if (string.IsNullOrEmpty(_currentUserId)) return;
        var result = await UserManagementService.GetVisibleUsersAsync(_currentUserId, pageNumber, _pageSize);
        _users = result.Items;
        _totalUsers = result.TotalCount;
        _currentPage = pageNumber;
    }

    private async Task PreviousPage()
    {
        if (_currentPage > 1)
        {
            await LoadDataForPage(_currentPage - 1);
        }
    }

    private async Task NextPage()
    {
        if (_currentPage < TotalPages)
        {
            await LoadDataForPage(_currentPage + 1);
        }
    }

    // --- RENAMED and CHANGED this method ---
    private void NavigateToUserDetails(string userId)
    {
        // This now navigates to the new page, passing the userId in the URL
        NavigationManager.NavigateTo($"/user-details/{userId}");
    }
}